{"version":3,"file":"static/js/316.5170a60d.chunk.js","mappings":"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","sources":["pages/StorePage/StoreCard/StoreCard.tsx","pages/StorePage/Filter/Filter.tsx","pages/StorePage/StorePage.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Box, Button, Paper } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\r\nimport Slide, { SlideProps } from \"@mui/material/Slide\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\r\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\r\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\r\nimport { useCart } from \"../../../hooks/useCart\";\r\nimport { StoreCardProps } from \"../Filter/Filter\";\r\n\r\ntype TransitionProps = Omit<SlideProps, \"direction\">;\r\n\r\nfunction TransitionUp(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(\r\n  function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  }\r\n);\r\n\r\nexport const StoreCard: React.FC<StoreCardProps> = React.memo(\r\n  ({ item, toggleFavorite }) => {\r\n    const { t } = useTranslation();\r\n    //@ts-ignore\r\n    const { addItem } = useCart();\r\n    const [, setOpen] = React.useState(false);\r\n    const [openCart, setOpenCart] = React.useState(false);\r\n    const [openFavorite, setOpenFavorite] = React.useState(false);\r\n    const [disabled, setDisabled] = React.useState(false);\r\n    const [favorite, setFavorite] = React.useState(false);\r\n    const [transition, setTransition] = React.useState<\r\n      React.ComponentType<TransitionProps> | undefined\r\n    >(undefined);\r\n\r\n    const handleClick =\r\n      (Transition: React.ComponentType<TransitionProps>) => () => {\r\n        setTransition(() => Transition);\r\n        setOpen(true);\r\n      };\r\n\r\n    const disableButton = () => setDisabled(true);\r\n    const handleAddToFavorites = () => toggleFavorite(item.id);\r\n    const handleFavorite = () => setFavorite((prev) => !prev);\r\n\r\n    const buttonStyle = { height: \"30px\", width: \"140px\", marginTop: \"5px\" };\r\n\r\n    return (\r\n      <>\r\n        <Paper elevation={3} sx={{ mt: 10 }}>\r\n          <Card\r\n            key={item.id}\r\n            sx={{\r\n              position: \"relative\",\r\n              maxWidth: \"305px\",\r\n            }}\r\n          >\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={`${process.env.PUBLIC_URL}/Images/Store/${item.description}.jpg`}\r\n              alt=\"Phone\"\r\n              sx={{\r\n                width: \"100%\",\r\n                height: \"400px\",\r\n                objectFit: \"contain\",\r\n              }}\r\n            />\r\n            <CardContent\r\n              sx={{\r\n                height: \"85px\",\r\n              }}\r\n            >\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                {item.title}\r\n              </Typography>\r\n              <Typography variant=\"h5\" color=\"text.primary\">\r\n                {item.price} €\r\n              </Typography>\r\n            </CardContent>\r\n            <Box sx={{ m: 1.5 }}>\r\n              {item.isStock ? (\r\n                <Tooltip title={t(\"inStockTip\")} arrow placement=\"right\">\r\n                  <Button\r\n                    disableRipple\r\n                    disableTouchRipple\r\n                    variant=\"outlined\"\r\n                    color=\"success\"\r\n                    sx={{\r\n                      height: \"30px\",\r\n                      cursor: \"default\",\r\n                      borderRadius: \"15px\",\r\n                    }}\r\n                  >\r\n                    {t(\"inStock\")}\r\n                    <CheckCircleOutlineIcon sx={{ ml: 1 }} />\r\n                  </Button>\r\n                </Tooltip>\r\n              ) : (\r\n                <Tooltip title={t(\"outOfStockTip\")} arrow placement=\"right\">\r\n                  <Button\r\n                    disableRipple\r\n                    disableTouchRipple\r\n                    variant=\"contained\"\r\n                    color=\"error\"\r\n                    sx={{\r\n                      height: \"30px\",\r\n                      cursor: \"default\",\r\n                      borderRadius: \"15px\",\r\n                    }}\r\n                  >\r\n                    {t(\"outOfStock\")}\r\n                    <HighlightOffIcon sx={{ ml: 1 }} />\r\n                  </Button>\r\n                </Tooltip>\r\n              )}\r\n            </Box>\r\n            <CardActions\r\n              disableSpacing\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n                alignItems: \"flex-end\",\r\n              }}\r\n            >\r\n              <Tooltip title={t(\"addToFavorites\")} arrow>\r\n                <Button\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    if (!favorite) {\r\n                      setOpenFavorite(true);\r\n                      handleClick(TransitionUp);\r\n                    }\r\n                    handleAddToFavorites();\r\n                    handleFavorite();\r\n                  }}\r\n                  sx={buttonStyle}\r\n                >\r\n                  {t(\"favorite\")}\r\n                  <Checkbox\r\n                    sx={{ marginLeft: \"-5px\" }}\r\n                    {...label}\r\n                    icon={<FavoriteBorder color=\"secondary\" />}\r\n                    checkedIcon={<Favorite color=\"secondary\" />}\r\n                    checked={favorite}\r\n                  />\r\n                </Button>\r\n              </Tooltip>\r\n              {disabled ? (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  aria-label=\"add to shopping cart\"\r\n                  sx={buttonStyle}\r\n                >\r\n                  {t(\"added\")}\r\n                  <Box sx={{ paddingLeft: \"2px\", paddingTop: \"3px\" }}>\r\n                    <DoneIcon />\r\n                  </Box>\r\n                </Button>\r\n              ) : !item.isStock ? (\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"success\"\r\n                  disabled\r\n                  aria-label=\"add to shopping cart\"\r\n                  sx={buttonStyle}\r\n                >\r\n                  {t(\"add\")}\r\n                  <Box sx={{ paddingLeft: \"2px\", paddingTop: \"3px\" }}>\r\n                    <DoneIcon />\r\n                  </Box>\r\n                </Button>\r\n              ) : (\r\n                <Tooltip title={t(\"addToCart\")} arrow>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    aria-label=\"add to shopping cart\"\r\n                    onClick={() => {\r\n                      handleClick(TransitionUp);\r\n                      setOpenCart(true);\r\n                      addItem(item);\r\n                      disableButton();\r\n                    }}\r\n                    sx={buttonStyle}\r\n                  >\r\n                    {t(\"add\")}\r\n                    <Box\r\n                      sx={{\r\n                        paddingLeft: \"3px\",\r\n                        paddingTop: \"8px\",\r\n                      }}\r\n                    >\r\n                      <AddShoppingCartIcon />\r\n                    </Box>\r\n                  </Button>\r\n                </Tooltip>\r\n              )}\r\n            </CardActions>\r\n          </Card>\r\n        </Paper>\r\n        {openFavorite && (\r\n          <Snackbar\r\n            open={openFavorite}\r\n            autoHideDuration={2000}\r\n            onClose={() => setOpenFavorite(false)}\r\n            TransitionComponent={transition}\r\n            key={transition ? transition.name : \"\"}\r\n            sx={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Alert onClose={() => setOpenFavorite(false)} severity=\"success\">\r\n              {t(\"AddedToFavorites\")}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n        {openCart && (\r\n          <Snackbar\r\n            open={openCart}\r\n            autoHideDuration={2000}\r\n            onClose={() => setOpenCart(false)}\r\n            TransitionComponent={transition}\r\n            key={transition ? transition.name : \"\"}\r\n            sx={{\r\n              width: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Alert onClose={() => setOpenCart(false)} severity=\"success\">\r\n              {t(\"addedToCart\")}\r\n            </Alert>\r\n          </Snackbar>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  alpha,\r\n  AppBar,\r\n  Box,\r\n  FormControl,\r\n  InputBase,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n  styled,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { StoreCard } from \"../StoreCard/StoreCard\";\r\nimport { ShopType } from \"../../../redux/reducers/shop-reducer\";\r\n\r\nexport interface StoreCardProps {\r\n  item: {\r\n    id: number;\r\n    title: string;\r\n    price: number;\r\n    description: string;\r\n    isFavorite: boolean;\r\n    isStock: boolean;\r\n  };\r\n  index: number;\r\n  toggleFavorite: (productId: number) => void;\r\n}\r\n\r\nconst Search = styled(\"div\")(({ theme }) => ({\r\n  position: \"relative\",\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n  \"&:hover\": {\r\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n  },\r\n  width: \"100%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    marginLeft: theme.spacing(1),\r\n    width: \"auto\",\r\n  },\r\n}));\r\n\r\nconst SearchIconWrapper = styled(\"div\")(({ theme }) => ({\r\n  padding: theme.spacing(0, 2),\r\n  height: \"100%\",\r\n  position: \"absolute\",\r\n  pointerEvents: \"none\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n  color: \"inherit\",\r\n  outline: \"1px solid gray\",\r\n  borderRadius: \"4px\",\r\n  height: \"53px\",\r\n  width: \"100%\",\r\n  \"& .MuiInputBase-input\": {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"25ch\",\r\n      \"&:focus\": {\r\n        width: \"40ch\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst Filter: React.FC = React.memo(() => {\r\n  const { t } = useTranslation();\r\n  const shopData = useSelector(\r\n    (state: { shopPage: ShopType }) => state.shopPage\r\n  );\r\n  const [products, setProducts] = React.useState([...shopData]);\r\n  const noFilters = () => setProducts(shopData);\r\n  const [filter, setFilter] = React.useState(\"\");\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const PriceHighToLow = () => {\r\n    const sortedList = [...products].sort((a, b) => b.price - a.price);\r\n    setProducts(sortedList);\r\n  };\r\n  const PriceLowToHigh = () => {\r\n    const sortedList = [...products].sort((a, b) => a.price - b.price);\r\n    setProducts(sortedList);\r\n  };\r\n  const filterFavorites = () => {\r\n    const favoriteFirst = [...products].filter((product) => product.isFavorite);\r\n    setProducts(favoriteFirst);\r\n  };\r\n  const filteredProducts = [...products].filter((product) => {\r\n    return product.title.toLowerCase().includes(search.toLowerCase());\r\n  });\r\n\r\n  const handleChange = (event: SelectChangeEvent) =>\r\n    setFilter(event.target.value);\r\n\r\n  const toggleFavorite = (productId: number) => {\r\n    setProducts((prevProducts) =>\r\n      prevProducts.map((product) =>\r\n        product.id === productId\r\n          ? { ...product, isFavorite: !product.isFavorite }\r\n          : product\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"relative\" color=\"default\">\r\n        <Toolbar\r\n          sx={{ display: \"flex\", flexWrap: \"wrap\", justifyContent: \"center\" }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ p: 1 }}>\r\n            {t(\"sortBy\")}\r\n          </Typography>\r\n          <FormControl\r\n            sx={{\r\n              margin: \"0px 20px\",\r\n              minWidth: 200,\r\n            }}\r\n          >\r\n            <InputLabel id=\"demo-simple-select-autowidth-label\">\r\n              {t(\"filter\")}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-autowidth-label\"\r\n              id=\"demo-simple-select-autowidth\"\r\n              value={filter}\r\n              onChange={handleChange}\r\n              autoWidth\r\n              label={t(\"filter\")}\r\n            >\r\n              <MenuItem value={\"No filters\"} onClick={noFilters}>\r\n                <em>{t(\"noFilters\")} </em>\r\n              </MenuItem>\r\n              <MenuItem value={10} onClick={PriceLowToHigh}>\r\n                {t(\"priceAscending\")}\r\n              </MenuItem>\r\n              <MenuItem value={21} onClick={PriceHighToLow}>\r\n                {t(\"priceDescending\")}\r\n              </MenuItem>\r\n              <MenuItem value={22} onClick={filterFavorites}>\r\n                {t(\"favoritesFirst\")}\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <Search\r\n            sx={{ m: 1 }}\r\n            //@ts-ignore\r\n            onChange={(event) => setSearch(event.target.value)}\r\n          >\r\n            <SearchIconWrapper>\r\n              <SearchIcon />\r\n            </SearchIconWrapper>\r\n            <StyledInputBase\r\n              placeholder={t(\"search\")}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </Search>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-between\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        {filteredProducts.map((item: StoreCardProps[\"item\"], index: number) => (\r\n          <StoreCard\r\n            key={item.id}\r\n            item={item}\r\n            index={index}\r\n            toggleFavorite={toggleFavorite}\r\n          />\r\n        ))}\r\n      </Box>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Container, Divider, Typography } from \"@mui/material\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nconst StorePage: React.FC = () => {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ mb: 10 }}>\r\n      <Typography\r\n        variant=\"h5\"\r\n        textAlign={\"center\"}\r\n        sx={{ m: 3, letterSpacing: \"1px\" }}\r\n      >\r\n        {t(\"storePage\")}\r\n      </Typography>\r\n      <Divider sx={{ m: 2 }} />\r\n      <Filter />\r\n    </Container>\r\n  );\r\n};\r\nexport default StorePage;\r\n"],"names":["TransitionUp","props","_jsx","Slide","direction","label","inputProps","Alert","React","ref","MuiAlert","elevation","variant","StoreCard","_ref","item","toggleFavorite","t","useTranslation","addItem","useCart","setOpen","openCart","setOpenCart","openFavorite","setOpenFavorite","disabled","setDisabled","favorite","setFavorite","transition","setTransition","undefined","handleClick","Transition","buttonStyle","height","width","marginTop","_jsxs","_Fragment","children","Paper","sx","mt","Card","position","maxWidth","CardMedia","component","image","concat","process","description","alt","objectFit","CardContent","Typography","color","title","price","Box","m","isStock","Tooltip","arrow","placement","Button","disableRipple","disableTouchRipple","cursor","borderRadius","CheckCircleOutlineIcon","ml","HighlightOffIcon","CardActions","disableSpacing","display","justifyContent","alignItems","onClick","id","prev","Checkbox","marginLeft","icon","FavoriteBorder","checkedIcon","Favorite","checked","paddingLeft","paddingTop","DoneIcon","AddShoppingCartIcon","Snackbar","open","autoHideDuration","onClose","TransitionComponent","severity","name","Search","styled","theme","shape","backgroundColor","alpha","palette","common","white","breakpoints","up","spacing","SearchIconWrapper","_ref2","padding","pointerEvents","StyledInputBase","InputBase","_ref3","outline","transitions","create","shopData","useSelector","state","shopPage","products","setProducts","filter","setFilter","search","setSearch","filteredProducts","product","toLowerCase","includes","productId","prevProducts","map","isFavorite","AppBar","Toolbar","flexWrap","p","FormControl","margin","minWidth","InputLabel","Select","labelId","value","onChange","event","target","autoWidth","MenuItem","noFilters","PriceLowToHigh","sortedList","sort","a","b","PriceHighToLow","filterFavorites","favoriteFirst","SearchIcon","placeholder","index","StorePage","Container","mb","textAlign","letterSpacing","Divider","Filter"],"sourceRoot":""}