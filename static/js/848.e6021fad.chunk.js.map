{"version":3,"file":"static/js/848.e6021fad.chunk.js","mappings":"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","sources":["webpack://shop/./src/pages/StorePage/StorePage.module.scss?8459","webpack://shop/./src/pages/StorePage/Card/Card.module.scss?f627","pages/StorePage/Card/Card.tsx","pages/StorePage/StorePage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"StorePage_container__RdojM\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__39RDh\",\"price\":\"Card_price__FOm6H\",\"link\":\"Card_link__rcoOd\"};","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport styles from \"./Card.module.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\r\nimport Slide, { SlideProps } from \"@mui/material/Slide\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\n\r\ntype TransitionProps = Omit<SlideProps, \"direction\">;\r\nfunction TransitionUp(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(\r\n  function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  }\r\n);\r\n\r\nexport function Media(props: any) {\r\n  const { loading = false, children } = props;\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345, m: 2 }}>\r\n      {loading ? <>{children}</> : <>{children}</>}\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst StorePageCard = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const shopData = useSelector((state: any) => state.shopPage);\r\n\r\n  const [expanded, setExpanded] = React.useState(\r\n    new Array(shopData.length).fill(false)\r\n  );\r\n\r\n  const handleExpandClick = (index: number) => {\r\n    const newExpanded = [...expanded];\r\n    newExpanded[index] = !newExpanded[index];\r\n    setExpanded(newExpanded);\r\n  };\r\n\r\n  const [value, setValue] = React.useState<number | null>(shopData.id);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [transition, setTransition] = React.useState<\r\n    React.ComponentType<TransitionProps> | undefined\r\n  >(undefined);\r\n\r\n  const handleClick =\r\n    (Transition: React.ComponentType<TransitionProps>) => () => {\r\n      setTransition(() => Transition);\r\n      setOpen(true);\r\n    };\r\n\r\n  const handleClose = (\r\n    event?: React.SyntheticEvent | Event,\r\n    reason?: string\r\n  ) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <>\r\n      {shopData.map((item: any, index: number) => (\r\n        <Card className={styles.card} key={item.id}>\r\n          <Link to={`/${item.description}`} className={styles.link}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={`${process.env.PUBLIC_URL}/Images/Store/${item.description}.jpg`}\r\n              alt=\"Phone\"\r\n              sx={{ p: 1 }}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                {item.title}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"text.secondary\"\r\n                className={styles.price}\r\n              >\r\n                {item.price} â‚¬\r\n              </Typography>\r\n            </CardContent>\r\n          </Link>\r\n          <Rating\r\n            name=\"simple-controlled\"\r\n            value={value}\r\n            onChange={(event, newValue) => {\r\n              setValue(newValue);\r\n            }}\r\n            sx={{ pl: 2 }}\r\n          />\r\n          <CardActions disableSpacing>\r\n            <Checkbox\r\n              {...label}\r\n              icon={<FavoriteBorder color=\"error\" />}\r\n              checkedIcon={<Favorite color=\"error\" />}\r\n            />\r\n            <IconButton\r\n              color=\"success\"\r\n              aria-label=\"add to shopping cart\"\r\n              onClick={handleClick(TransitionUp)}\r\n            >\r\n              <AddShoppingCartIcon />\r\n            </IconButton>\r\n            <ExpandMore\r\n              expand={expanded[index]}\r\n              onClick={() => handleExpandClick(index)}\r\n              aria-expanded={expanded[index]}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </ExpandMore>\r\n          </CardActions>\r\n          <Collapse in={expanded[index]} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n              <Typography paragraph>{t(item.description)}</Typography>\r\n            </CardContent>\r\n          </Collapse>\r\n        </Card>\r\n      ))}\r\n\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n        TransitionComponent={transition}\r\n        key={transition ? transition.name : \"\"}\r\n        sx={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          {t(\"addedToCart\")}\r\n        </Alert>\r\n      </Snackbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StorePageCard;\r\n","import styles from \"./StorePage.module.scss\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card, { Media } from \"./Card/Card\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function StorePage() {\r\n  const shopData = useSelector((state: any) => state.shopPage);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n  // React.useEffect(() => {\r\n  //   if (shopData && shopData.length > 0) {\r\n  //     setIsLoading(false);\r\n  //   }\r\n  // }, [shopData]);\r\n  React.useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 100);\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={styles.container}>\r\n      {shopData.map((item: any, index: number) => {\r\n        if (isLoading) {\r\n          return (\r\n            <Media loading key={index}>\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"rectangular\"\r\n                sx={{ height: 400, width: 335, maxWidth: \"40vh\" }}\r\n              />\r\n              <Skeleton animation=\"wave\" height={50} />\r\n              <Skeleton animation=\"wave\" height={50} width=\"50%\" />\r\n            </Media>\r\n          );\r\n        } else {\r\n          return <Card key={item.id} />;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["TransitionUp","props","_jsx","Slide","direction","ExpandMore","styled","expand","other","IconButton","_ref","theme","transform","marginLeft","transition","transitions","create","duration","shortest","label","inputProps","Alert","React","ref","MuiAlert","elevation","variant","Media","loading","children","Card","sx","maxWidth","m","_Fragment","StorePageCard","t","useTranslation","shopData","useSelector","state","shopPage","expanded","setExpanded","Array","length","fill","value","setValue","id","open","setOpen","setTransition","undefined","handleClose","event","reason","_jsxs","map","item","index","className","styles","Link","to","concat","description","CardMedia","component","image","process","alt","p","CardContent","Typography","color","title","price","Rating","name","onChange","newValue","pl","CardActions","disableSpacing","Checkbox","icon","FavoriteBorder","checkedIcon","Favorite","onClick","Transition","AddShoppingCartIcon","newExpanded","handleExpandClick","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","paragraph","Snackbar","autoHideDuration","onClose","TransitionComponent","width","display","justifyContent","alignItems","severity","StorePage","isLoading","setIsLoading","timer","setTimeout","clearTimeout","Box","container","Skeleton","animation","height"],"sourceRoot":""}