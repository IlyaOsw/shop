{"version":3,"file":"static/js/848.c0030171.chunk.js","mappings":"wHACA,SAAgB,UAAY,8B,8ICA5B,QAAuB,mBAAvB,EAAkD,oBAAlD,EAA6E,mB,mFC4B7E,SAASA,EAAaC,GACpB,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,IAAKF,EAAOG,UAAU,MACrC,CAEA,MAAMC,GAAaC,EAAAA,EAAAA,KAAQL,IACzB,MAAM,OAAEM,KAAWC,GAAUP,EAC7B,OAAOC,EAAAA,EAAAA,KAACO,EAAAA,EAAU,IAAKD,GAAS,GAFfF,EAGhBI,IAAA,IAAC,MAAEC,EAAK,OAAEJ,GAAQG,EAAA,MAAM,CACzBE,UAAYL,EAA0B,iBAAjB,eACrBM,WAAY,OACZC,WAAYH,EAAMI,YAAYC,OAAO,YAAa,CAChDC,SAAUN,EAAMI,YAAYE,SAASC,WAExC,IACKC,EAAQ,CAAEC,WAAY,CAAE,aAAc,kBAEtCC,EAAQC,EAAAA,YACZ,SAAerB,EAAOsB,GACpB,OAAOrB,EAAAA,EAAAA,KAACsB,EAAAA,EAAQ,CAACC,UAAW,EAAGF,IAAKA,EAAKG,QAAQ,YAAazB,GAChE,IAGK,SAAS0B,EAAM1B,GACpB,MAAM,QAAE2B,GAAU,EAAK,SAAEC,GAAa5B,EAEtC,OACEC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAI,CAACC,GAAI,CAAEC,SAAU,IAAKC,EAAG,GAAIJ,UACrB3B,EAAAA,EAAAA,KAAAgC,EAAAA,SAAA,CAAAL,SAAGA,KAGpB,CAEA,MA+JA,EA/JsBM,KACpB,MAAM,EAAEC,IAAMC,EAAAA,EAAAA,MAERC,GAAWC,EAAAA,EAAAA,KAAaC,GAAeA,EAAMC,YAE5CC,EAAUC,GAAerB,EAAAA,SAC9B,IAAIsB,MAAMN,EAASO,QAAQC,MAAK,KAS3BC,EAAOC,GAAY1B,EAAAA,SAA8BgB,EAASW,KAE1DC,EAAMC,GAAW7B,EAAAA,UAAe,IAChCR,EAAYsC,GAAiB9B,EAAAA,cAElC+B,GAEIC,EACHC,GAAqD,KACpDH,GAAc,IAAMG,IACpBJ,GAAQ,EAAK,EAGXK,EAAkBA,CACtBC,EACAC,KAEe,cAAXA,GAIJC,GAAY,EAAM,GAGbC,EAAUD,GAAerC,EAAAA,UAAe,IACxCuC,EAAcC,GAAmBxC,EAAAA,UAAe,IAChDyC,EAAWC,GAAgB1C,EAAAA,SAAegB,EAAS2B,KAAI,KAAM,KAQpE,OACEC,EAAAA,EAAAA,MAAAhC,EAAAA,SAAA,CAAAL,SAAA,CACGS,EAAS2B,KAAI,CAACE,EAAWC,KACxBF,EAAAA,EAAAA,MAACpC,EAAAA,EAAI,CAACuC,UAAWC,EAAYzC,SAAA,EAC3BqC,EAAAA,EAAAA,MAACK,EAAAA,GAAI,CAACC,GAAE,IAAAC,OAAMN,EAAKO,aAAeL,UAAWC,EAAYzC,SAAA,EACvD3B,EAAAA,EAAAA,KAACyE,EAAAA,EAAS,CACRC,UAAU,MACVC,MAAK,GAAAJ,OAAKK,QAAsB,kBAAAL,OAAiBN,EAAKO,YAAW,QACjEK,IAAI,QACJhD,GAAI,CAAEiD,EAAG,MAEXd,EAAAA,EAAAA,MAACe,EAAAA,EAAW,CAAApD,SAAA,EACV3B,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CAACxD,QAAQ,KAAKyD,MAAM,iBAAgBtD,SAC5CsC,EAAKiB,SAERlB,EAAAA,EAAAA,MAACgB,EAAAA,EAAU,CACTxD,QAAQ,KACRyD,MAAM,iBACNd,UAAWC,EAAazC,SAAA,CAEvBsC,EAAKkB,MAAM,oBAIlBnB,EAAAA,EAAAA,MAACoB,EAAAA,EAAW,CAACC,gBAAc,EAAA1D,SAAA,EACzB3B,EAAAA,EAAAA,KAACsF,EAAAA,EAAQ,IACHrE,EACJsE,MAAMvF,EAAAA,EAAAA,KAACwF,EAAAA,EAAc,CAACP,MAAM,UAC5BQ,aAAazF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAQ,CAACT,MAAM,UAC7BU,QAASA,KACP,MAAMC,EAAsB/B,EAAUK,IApCpD,SAAwBA,GACtB,MAAM2B,EAAmB,IAAIhC,GAC7BgC,EAAiB3B,IAAU2B,EAAiB3B,GAC5CJ,EAAa+B,EACf,CAiCcC,CAAe5B,GACV0B,IACHhC,GAAgB,GAChBR,EAAYtD,GACd,EAEFiG,QAASlC,EAAUK,MAErBlE,EAAAA,EAAAA,KAACO,EAAAA,EAAU,CACT0E,MAAM,UACN,aAAW,uBACXU,QAASA,KACPvC,EAAYtD,GACZ2D,GAAY,EAAK,EACjB9B,UAEF3B,EAAAA,EAAAA,KAACgG,EAAAA,EAAmB,OAEtBhG,EAAAA,EAAAA,KAACG,EAAU,CACTE,OAAQmC,EAAS0B,GACjByB,QAASA,KA3FMzB,KACzB,MAAM+B,EAAc,IAAIzD,GACxByD,EAAY/B,IAAU+B,EAAY/B,GAClCzB,EAAYwD,EAAY,EAyFZC,CAAkBhC,EAAM,EAE1B,gBAAe1B,EAAS0B,GACxB,aAAW,YAAWvC,UAEtB3B,EAAAA,EAAAA,KAACmG,EAAAA,EAAc,UAGnBnG,EAAAA,EAAAA,KAACoG,EAAAA,EAAQ,CAACC,GAAI7D,EAAS0B,GAAQoC,QAAQ,OAAOC,eAAa,EAAA5E,UACzD3B,EAAAA,EAAAA,KAAC+E,EAAAA,EAAW,CAAApD,UACV3B,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CAACwB,WAAS,EAAA7E,SAAEO,EAAE+B,EAAKO,qBA3DDP,EAAKlB,MAiEzCY,IACC3D,EAAAA,EAAAA,KAACyG,EAAAA,EAAQ,CACPzD,KAAMW,EACN+C,iBAAkB,IAClBC,QAASA,IAAM/C,GAAgB,GAC/BgD,oBAAqBhG,EAErBiB,GAAI,CACFgF,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UACZrF,UAEF3B,EAAAA,EAAAA,KAACmB,EAAK,CAACwF,QAASA,IAAM/C,GAAgB,GAAQqD,SAAS,UAAStF,SAC7DO,EAAE,uBATAtB,EAAaA,EAAWsG,KAAO,IAavCxD,IACC1D,EAAAA,EAAAA,KAACyG,EAAAA,EAAQ,CACPzD,KAAMU,EACNgD,iBAAkB,IAClBC,QAASrD,EACTsD,oBAAqBhG,EAErBiB,GAAI,CACFgF,MAAO,OACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UACZrF,UAEF3B,EAAAA,EAAAA,KAACmB,EAAK,CAACwF,QAASrD,EAAiB2D,SAAS,UAAStF,SAChDO,EAAE,kBATAtB,EAAaA,EAAWsG,KAAO,MAavC,E,cCjNQ,SAASC,IACtB,MAAM/E,GAAWC,EAAAA,EAAAA,KAAaC,GAAeA,EAAMC,YAC5C6E,EAAWC,GAAgBjG,EAAAA,UAAe,GAQjD,OANAA,EAAAA,WAAgB,KACVgB,GAAYA,EAASO,OAAS,GAChC0E,GAAa,EACf,GACC,CAACjF,KAGFpC,EAAAA,EAAAA,KAACsH,EAAAA,EAAG,CAACnD,UAAWC,EAAOmD,UAAU5F,SAC9BS,EAAS2B,KAAI,CAACE,EAAWC,IACpBkD,GAEApD,EAAAA,EAAAA,MAACvC,EAAK,CAACC,SAAO,EAAAC,SAAA,EACZ3B,EAAAA,EAAAA,KAACwH,EAAAA,EAAQ,CACPC,UAAU,OACVjG,QAAQ,cACRK,GAAI,CAAE6F,OAAQ,IAAKb,MAAO,IAAK/E,SAAU,WAE3C9B,EAAAA,EAAAA,KAACwH,EAAAA,EAAQ,CAACC,UAAU,OAAOC,OAAQ,MACnC1H,EAAAA,EAAAA,KAACwH,EAAAA,EAAQ,CAACC,UAAU,OAAOC,OAAQ,GAAIb,MAAM,UAP3B3C,IAWflE,EAAAA,EAAAA,KAAC4B,EAAI,GAAMqC,EAAKlB,OAKjC,C","sources":["webpack://shop/./src/pages/StorePage/StorePage.module.scss?8459","webpack://shop/./src/pages/StorePage/Card/Card.module.scss?f627","pages/StorePage/Card/Card.tsx","pages/StorePage/StorePage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"StorePage_container__RdojM\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__39RDh\",\"price\":\"Card_price__FOm6H\",\"link\":\"Card_link__rcoOd\"};","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport IconButton, { IconButtonProps } from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport FavoriteBorder from \"@mui/icons-material/FavoriteBorder\";\r\nimport Favorite from \"@mui/icons-material/Favorite\";\r\nimport styles from \"./Card.module.scss\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Rating from \"@mui/material/Rating\";\r\nimport MuiAlert, { AlertProps } from \"@mui/material/Alert\";\r\nimport Slide, { SlideProps } from \"@mui/material/Slide\";\r\n\r\ninterface ExpandMoreProps extends IconButtonProps {\r\n  expand: boolean;\r\n}\r\n\r\ntype TransitionProps = Omit<SlideProps, \"direction\">;\r\n\r\nfunction TransitionUp(props: TransitionProps) {\r\n  return <Slide {...props} direction=\"up\" />;\r\n}\r\n\r\nconst ExpandMore = styled((props: ExpandMoreProps) => {\r\n  const { expand, ...other } = props;\r\n  return <IconButton {...other} />;\r\n})(({ theme, expand }) => ({\r\n  transform: !expand ? \"rotate(0deg)\" : \"rotate(180deg)\",\r\n  marginLeft: \"auto\",\r\n  transition: theme.transitions.create(\"transform\", {\r\n    duration: theme.transitions.duration.shortest,\r\n  }),\r\n}));\r\nconst label = { inputProps: { \"aria-label\": \"Checkbox demo\" } };\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(\r\n  function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  }\r\n);\r\n\r\nexport function Media(props: any) {\r\n  const { loading = false, children } = props;\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 345, m: 2 }}>\r\n      {loading ? <>{children}</> : <>{children}</>}\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst StorePageCard = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const shopData = useSelector((state: any) => state.shopPage);\r\n\r\n  const [expanded, setExpanded] = React.useState(\r\n    new Array(shopData.length).fill(false)\r\n  );\r\n\r\n  const handleExpandClick = (index: number) => {\r\n    const newExpanded = [...expanded];\r\n    newExpanded[index] = !newExpanded[index];\r\n    setExpanded(newExpanded);\r\n  };\r\n\r\n  const [value, setValue] = React.useState<number | null>(shopData.id);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const [transition, setTransition] = React.useState<\r\n    React.ComponentType<TransitionProps> | undefined\r\n  >(undefined);\r\n\r\n  const handleClick =\r\n    (Transition: React.ComponentType<TransitionProps>) => () => {\r\n      setTransition(() => Transition);\r\n      setOpen(true);\r\n    };\r\n\r\n  const handleCloseCart = (\r\n    event?: React.SyntheticEvent | Event,\r\n    reason?: string\r\n  ) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpenCart(false);\r\n  };\r\n\r\n  const [openCart, setOpenCart] = React.useState(false);\r\n  const [openFavorite, setOpenFavorite] = React.useState(false);\r\n  const [favorites, setFavorites] = React.useState(shopData.map(() => false));\r\n\r\n  function toggleFavorite(index: number) {\r\n    const updatedFavorites = [...favorites];\r\n    updatedFavorites[index] = !updatedFavorites[index];\r\n    setFavorites(updatedFavorites);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {shopData.map((item: any, index: number) => (\r\n        <Card className={styles.card} key={item.id}>\r\n          <Link to={`/${item.description}`} className={styles.link}>\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={`${process.env.PUBLIC_URL}/Images/Store/${item.description}.jpg`}\r\n              alt=\"Phone\"\r\n              sx={{ p: 1 }}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                {item.title}\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                color=\"text.secondary\"\r\n                className={styles.price}\r\n              >\r\n                {item.price} â‚¬\r\n              </Typography>\r\n            </CardContent>\r\n          </Link>\r\n          <CardActions disableSpacing>\r\n            <Checkbox\r\n              {...label}\r\n              icon={<FavoriteBorder color=\"error\" />}\r\n              checkedIcon={<Favorite color=\"error\" />}\r\n              onClick={() => {\r\n                const isCurrentlyFavorite = favorites[index];\r\n                toggleFavorite(index);\r\n                if (!isCurrentlyFavorite) {\r\n                  setOpenFavorite(true);\r\n                  handleClick(TransitionUp);\r\n                }\r\n              }}\r\n              checked={favorites[index]}\r\n            />\r\n            <IconButton\r\n              color=\"success\"\r\n              aria-label=\"add to shopping cart\"\r\n              onClick={() => {\r\n                handleClick(TransitionUp);\r\n                setOpenCart(true);\r\n              }}\r\n            >\r\n              <AddShoppingCartIcon />\r\n            </IconButton>\r\n            <ExpandMore\r\n              expand={expanded[index]}\r\n              onClick={() => {\r\n                handleExpandClick(index);\r\n              }}\r\n              aria-expanded={expanded[index]}\r\n              aria-label=\"show more\"\r\n            >\r\n              <ExpandMoreIcon />\r\n            </ExpandMore>\r\n          </CardActions>\r\n          <Collapse in={expanded[index]} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n              <Typography paragraph>{t(item.description)}</Typography>\r\n            </CardContent>\r\n          </Collapse>\r\n        </Card>\r\n      ))}\r\n\r\n      {openFavorite && (\r\n        <Snackbar\r\n          open={openFavorite}\r\n          autoHideDuration={3000}\r\n          onClose={() => setOpenFavorite(false)}\r\n          TransitionComponent={transition}\r\n          key={transition ? transition.name : \"\"}\r\n          sx={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Alert onClose={() => setOpenFavorite(false)} severity=\"success\">\r\n            {t(\"AddedToFavorites\")}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n      {openCart && (\r\n        <Snackbar\r\n          open={openCart}\r\n          autoHideDuration={3000}\r\n          onClose={handleCloseCart}\r\n          TransitionComponent={transition}\r\n          key={transition ? transition.name : \"\"}\r\n          sx={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Alert onClose={handleCloseCart} severity=\"success\">\r\n            {t(\"addedToCart\")}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StorePageCard;\r\n","import styles from \"./StorePage.module.scss\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Card, { Media } from \"./Card/Card\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function StorePage() {\r\n  const shopData = useSelector((state: any) => state.shopPage);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n\r\n  React.useEffect(() => {\r\n    if (shopData && shopData.length > 0) {\r\n      setIsLoading(false);\r\n    }\r\n  }, [shopData]);\r\n\r\n  return (\r\n    <Box className={styles.container}>\r\n      {shopData.map((item: any, index: number) => {\r\n        if (isLoading) {\r\n          return (\r\n            <Media loading key={index}>\r\n              <Skeleton\r\n                animation=\"wave\"\r\n                variant=\"rectangular\"\r\n                sx={{ height: 400, width: 335, maxWidth: \"40vh\" }}\r\n              />\r\n              <Skeleton animation=\"wave\" height={50} />\r\n              <Skeleton animation=\"wave\" height={50} width=\"50%\" />\r\n            </Media>\r\n          );\r\n        } else {\r\n          return <Card key={item.id} />;\r\n        }\r\n      })}\r\n    </Box>\r\n  );\r\n}\r\n"],"names":["TransitionUp","props","_jsx","Slide","direction","ExpandMore","styled","expand","other","IconButton","_ref","theme","transform","marginLeft","transition","transitions","create","duration","shortest","label","inputProps","Alert","React","ref","MuiAlert","elevation","variant","Media","loading","children","Card","sx","maxWidth","m","_Fragment","StorePageCard","t","useTranslation","shopData","useSelector","state","shopPage","expanded","setExpanded","Array","length","fill","value","setValue","id","open","setOpen","setTransition","undefined","handleClick","Transition","handleCloseCart","event","reason","setOpenCart","openCart","openFavorite","setOpenFavorite","favorites","setFavorites","map","_jsxs","item","index","className","styles","Link","to","concat","description","CardMedia","component","image","process","alt","p","CardContent","Typography","color","title","price","CardActions","disableSpacing","Checkbox","icon","FavoriteBorder","checkedIcon","Favorite","onClick","isCurrentlyFavorite","updatedFavorites","toggleFavorite","checked","AddShoppingCartIcon","newExpanded","handleExpandClick","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","paragraph","Snackbar","autoHideDuration","onClose","TransitionComponent","width","display","justifyContent","alignItems","severity","name","StorePage","isLoading","setIsLoading","Box","container","Skeleton","animation","height"],"sourceRoot":""}